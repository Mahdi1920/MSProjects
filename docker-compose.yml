version: "3"
services:
  mysqldb:
    image: mysql:8.3.0
    container_name: mysqldb
    restart: always
    environment:
      - MYSQL_ROOT_PASSWORD=
      - MYSQL_ALLOW_EMPTY_PASSWORD=true
      - MYSQL_DATABASE=Candidat_MS
    ports:
      - "3306:3306"
    networks:
      - ms
    volumes:
      - mysql-db:/data/mysqldb
  mongodb:
    image: mongo
    container_name: mongodb
    restart: always
    ports:
      - "27017:27017"
    volumes:
      - mongodb:/data/mongodb
    networks:
      - ms
  config-server:
    image: mchabbouh/config-server:0.0.1
    container_name: config-server
    restart: always
    ports:
      - "8888:8888"
    env_file:
      - .env
    environment:
      - spring_cloud_config_server_git_uri=${GIT_URI}
      - spring_cloud_config_server_git_username=${GIT_USERNAME}
      - spring_cloud_config_server_git_password=${GIT_TOKEN}
    volumes:
      - config-server:/config-server
    networks:
      - ms
  discovery-server:
    depends_on:
      - config-server
    image: mchabbouh/discovery-server:0.0.1
    container_name: discovery-server
    restart: always
    ports:
      - 8761:8761
    volumes:
      - discovery-server:/discovery-server
    networks:
      - ms
  candidat-ms:
    depends_on:
      - discovery-server
      - gateway-api
      - mysqldb
      - config-server
      - quiz-ms
#      - keycloak
    image: mchabbouh/candidat-ms:1.0
#    image: mchabbouh/candidat-ms:2.0
    container_name: candidat-ms
#    container_name: candidat-ms2
    restart: always
    ports:
      - "8082:8082"
    environment:
      - spring_datasource_url=jdbc:mysql://mysqldb:3306/Candidat_MS?createDatabaseIfNotExist=true
      - spring.datasource.username=root
      - spring.datasource.password=
      - spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQL8Dialect
      - spring.jpa.hibernate.ddl-auto= update
      - eureka.client.serviceUrl.defaultZone= http://discovery-server:8761/eureka/
      - spring.config.import=optional:configserver:http://config-server:8888
#      - SPRING.SECURITY.OAUTH2.RESOURCESERVER.JWT.ISSUER-URI=http://keycloak:8080/realms/candidats-quizs
#      - SPRING.SECURITY.OAUTH2.RESOURCESERVER.JWT.JWK-SET-URI=http://keycloak:8080/realms/candidats-quizs/protocol/openid-connect/certs
      - spring.kafka.bootstrap-servers=kafka:9095
      - spring.kafka.consumer.group-id=my-group
      - spring.kafka.consumer.auto-offset-reset=earliest
      - spring.kafka.producer.acks=all
    volumes:
      - candidat-ms:/candidat-ms
    networks:
      - ms
    stdin_open: true
    tty: true
  quiz-ms:
    depends_on:
      - discovery-server
      - gateway-api
      - mongodb
      - config-server
#      - keycloak
    image: mchabbouh/quiz-ms:1.0
#    image: mchabbouh/quiz-ms:2.0
    container_name: quiz-ms
#    container_name: quiz-ms2
    restart: always
    ports:
      - "8081:8081"
    environment:
      - SPRING_DATA_MONGODB_URI=mongodb://mongodb:27017/Quiz_MS
      - EUREKA_CLIENT_SERVICEURL_DEFAULTZONE=http://discovery-server:8761/eureka/
      - SPRING_CONFIG_IMPORT=configserver:http://config-server:8888/
#      - SPRING.SECURITY.OAUTH2.RESOURCESERVER.JWT.ISSUER-URI=http://localhost:8080/realms/candidats-quizs
#      - SPRING.SECURITY.OAUTH2.RESOURCESERVER.JWT.JWK-SET-URI=http://localhost:8080/realms/candidats-quizs/protocol/openid-connect/certs
      - spring.kafka.bootstrap-servers=kafka:9095
      - spring.kafka.consumer.group-id=my-group
      - spring.kafka.consumer.auto-offset-reset=earliest
      - spring.kafka.producer.acks=all
    volumes:
      - quiz-ms:/quiz-ms
    networks:
      - ms
  gateway-api:
#    depends_on:
#      - candidat-ms
#      - quiz-ms
#      - discovery-server
#      - config-server
    image: mchabbouh/gateway-api:0.0.1
    container_name: gateway-api
    restart: always
    ports:
      - 8083:8083
    environment:
      - EUREKA_CLIENT_SERVICEURL_DEFAULTZONE=http://discovery-server:8761/eureka/
    volumes:
      - gateway-api:/gateway
    networks:
      - ms
#  keycloak:
#    image: quay.io/keycloak/keycloak:latest
#    container_name: keycloak1
#    ports:
#      - "8080:8080"
#    environment:
#      - KEYCLOAK_ADMIN=admin
#      - KEYCLOAK_ADMIN_PASSWORD=admin
#      - KC_DB=postgres
#      - KC_DB_URL=jdbc:postgresql://postgres:5432/keycloak
#      - KC_DB_USERNAME=keycloak
#      - KC_DB_PASSWORD=keycloak
#    command: start-dev
#    depends_on:
#      - postgres
#    networks:
#      - ms
#  postgres:
#    image: postgres:15
#    container_name: keycloak-db
#    ports:
#      - "5432:5432"
#    environment:
#      - POSTGRES_DB=keycloak
#      - POSTGRES_USER=keycloak
#      - POSTGRES_PASSWORD=keycloak
#    volumes:
#      - postgres_data:/var/lib/postgresql/data
#    networks:
#      - ms
  zookeeper:
    image: wurstmeister/zookeeper:latest
    container_name: zookeeper1
    ports:
      - "2181:2181"
    networks:
      - ms

  kafka:
    image: wurstmeister/kafka:latest
    container_name: kafka1
    ports:
      - "9092:9092"
      - "9095:9095"
    environment:
      - KAFKA_ADVERTISED_LISTENERS=PLAINTEXT://kafka:9095
      - KAFKA_LISTENER_SECURITY_PROTOCOL=PLAINTEXT
      - KAFKA_LISTENER_PORT=9093
      - KAFKA_LISTENERS=PLAINTEXT://0.0.0.0:9095
      - KAFKA_ZOOKEEPER_CONNECT=zookeeper:2181
    depends_on:
      - zookeeper
    networks:
      - ms
volumes:
  mysql-db :
  mongodb :
  candidat-ms :
  quiz-ms :
  gateway-api :
  discovery-server :
  config-server :
  postgres_data:
networks:
  ms: